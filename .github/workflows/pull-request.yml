name: Pull Request

on:
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  lint:
    name: Lint Code (Laravel Pint)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, json, bcmath, pdo, mysql
          coverage: none

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Run Laravel Pint
        run: ./vendor/bin/pint --test

  test:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, xml, ctype, json, bcmath, pdo, sqlite, dom, curl, libxml, fileinfo
          coverage: xdebug

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: vendor
          key: composer-${{ hashFiles('composer.lock') }}
          restore-keys: |
            composer-

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-progress --no-interaction

      - name: Copy .env file
        run: cp .env.example .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Clear config cache
        run: php artisan config:clear

      - name: Install Playwright browsers
        run: |
          npx playwright install --with-deps chromium

      - name: Run tests with coverage
        run: ./vendor/bin/pest --coverage --coverage-clover=coverage.xml

      - name: Upload coverage to artifacts
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml
          retention-days: 7

      - name: Extract coverage percentage
        id: coverage
        run: |
          COVERAGE=$(php -r "
            \$xml = simplexml_load_file('coverage.xml');
            \$metrics = \$xml->project->metrics;
            \$covered = (float)\$metrics['coveredstatements'];
            \$total = (float)\$metrics['statements'];
            echo \$total > 0 ? round((\$covered / \$total) * 100, 2) : 0;
          ")
          echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Store coverage for comment
        run: echo "${{ steps.coverage.outputs.percentage }}" > coverage-percentage.txt

      - name: Upload coverage percentage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-percentage
          path: coverage-percentage.txt
          retention-days: 1

  status-comment:
    name: Post Status Comment
    runs-on: ubuntu-latest
    needs: [lint, test]
    if: always() && needs.lint.result == 'success' && needs.test.result == 'success'
    permissions:
      pull-requests: write

    steps:
      - name: Download coverage percentage
        uses: actions/download-artifact@v4
        with:
          name: coverage-percentage

      - name: Read coverage percentage
        id: coverage
        run: |
          COVERAGE=$(cat coverage-percentage.txt)
          echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const coverage = '${{ steps.coverage.outputs.percentage }}';
            const coverageEmoji = coverage >= 80 ? '✅' : coverage >= 60 ? '⚠️' : '❌';

            const body = `## ✅ Pull Request Checks Passed

            All checks have completed successfully!

            ### Summary
            - ✅ **Lint**: Code style check passed (Laravel Pint)
            - ✅ **Tests**: Unit tests passed
            - ${coverageEmoji} **Coverage**: ${coverage}%

            ### Details
            - **Workflow Run**: [#${{ github.run_number }}](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            - **Commit**: ${{ github.event.pull_request.head.sha }}

            Great work! 🎉`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });
